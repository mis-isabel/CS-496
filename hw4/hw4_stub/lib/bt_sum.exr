
(* Example 3 *)

let n_left = { data <= 12; left <= 0; right <= 0}    (* 0 in head signals null *)
in let n_right = { data <= 44; left <= 0; right <= 0}
in let n_root = { data <= 33; left <= n_left ; right <= n_right }
in let t1 = { root <= n_root ; size <= 3} 
in letrec sum_bt_helper (nd) = 
   	      if number?(nd)
	      then 0
	      else nd.data + (sum_bt_helper nd.left) + (sum_bt_helper nd.right)
in let sum_bt = proc (t) { (sum_bt_helper t.root) }
in begin
     (sum_bt t1)
   end